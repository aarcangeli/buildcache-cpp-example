name: Build

on:
  push:
    branches:

concurrency:
  group: release-${{ github.ref_name }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          #- { name: "Windows MSVC", os: windows-2022 }
          #- { name: "Ubuntu Clang", os: ubuntu-22.04 }
          - { name: "MacOS AppleClang", os: macos-12 }
        buildType:
          - { name: "Debug" }
          - { name: "RelWithDebInfo" }
          - { name: "Release" }

    name: ${{matrix.config.name}} (${{matrix.buildType.name}})
    runs-on: ${{matrix.config.os}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup msbuild
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup sccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 1.5G
          key: ${{ runner.os }}-${{ matrix.buildType.name }}
          variant: sccache

      - name: Setup ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          version: 1.10.2
          dest: ${{ runner.workspace }}/ninja_bin

      - name: Enable Developer Command Prompt
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1.10.0
        with:
          arch: x64

      - name: Use clang on linux
        shell: bash
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y llvm clang
          clang --version
          echo CC=clang >> $GITHUB_ENV
          echo CXX=clang++ >> $GITHUB_ENV

      - name: Configure CMake
        shell: bash
        run: cmake -G Ninja -S . -B build -D CMAKE_BUILD_TYPE=${{ matrix.buildType.name }}

      - name: Build
        run: cmake --build build --target install

      - name: Run the program
        shell: bash
        run: install/example_project

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.config.name}}-${{matrix.buildType.name}}
          path: install
